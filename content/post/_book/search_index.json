[
["_main.html", "Knockback stacking part 1: vector addition and Falco", " Knockback stacking part 1: vector addition and Falco sp99 2020-04-20 0.0.1 Knockback stacking is a not often discussed mechanic that has big implications for Falco. Have you ever noticed dair sometimes sends the opponent downwards slower than you’d expect? Lots of people see it and think that's weak dair, obviously. Well, for starters, “weak dair” (the late hitbox) isn’t actually weak: at low percents it inflicts more knockback than clean dair and at higher percents it’s marginally weaker. Then what’s making them fall slow? It’s knockback stacking. Here’s a pretty clear example, Marth gets shined, then he gets daired (clean hitbox, not late) and falls down very slowly, then it happens again. See how even with percent increasing and “weak dair” never coming into play he still falls slowly? So, how does this work? taukhan already did a thorough writeup, so if you want to learn more check it out. The short version is that the game does conditional vector addition for knockback when more than 10 frames have passed between hits. Let’s break that down: the game takes your knockback, looks at the vertical and horizontal knockback vectors separately and adds them with the components of the following hit. In the case of shine into dair, one sends you up, the other sends you down, so you add them and they end up cancelling each other. Ok, but what about situations where the kb components point in the same direction? That’s where the “conditional” part comes in, they only get added if they point in opposite directions, if they point in the same direction, the game keeps the bigger one and discards the other one. In action it looks like this: This shows a shine bair with no kb stacking, followed by one with stacking, Marth goes way higher in the second one (it’s the one where he gets combo’d instead of getting an upair of his own). That’s because the remaining vertical knockback from the shine is bigger than the vertical knockback of the bair, so you keep it and ignore bair’s v. knockback. Same thing happens with the horizontal knockback, except this time it’s bair that has the bigger horizontal component. The result is you (kinda) get a bair with shine’s upward knocback and bair’s horizontal knockback. In a follow up post I’ll show some applications (including a clip of a very excited westballz after a conversation we had). For a long (long) time this type of combo has been a staple of Mango’s game vs Marth on FD: The usual tips on how to do it go along the lines of: instant double jump hit with soft dair, not hard fast fall when you hit them While the advice seems to help, lots of people still have trouble with it. This is because they’re ignoring how it works: it’s all about stacking, baby. In the previous post I explained how knockback stacking worked, and assumed readers had a general idea about how knockback behaves. There’s a specific (and intuitive) part of knockback’s behavior that’s relevant here. When you hit someone they don’t go flying infinitely and die, right? That’s cause kb decays with time and once they exit hitstun they can act (drift, double jump, do specials, whatever). For kb stacking combos, this means when you hit them matters a lot. To be more specific, for shine dair combos you want the right amount of upwards vertical knockback before hitting with dair. Do it too early (too much positive vertical knockback), and they won’t fall down fast enough, do it too late, and they’ll land before you even get close to the ground. An extreme example of this is hitting Marth with shine into dair at 0%, do it fast enough and Marth will go up when daired. With this idea in mind, troubleshooting combos becomes easier: Did they go down too slowly? Dair later. Did they go down too fast? Dair earlier. Take into account your jumps too, you don’t want to delay your dair and then hit them as you rise, it’s usually better to jump early and dair later (notice the first dair in the mango clip). If that still doesn’t work, then try hitting them with the late hit of dair. Since you have to decide on the fly based on their DI, percent and how much time you need to reach them, it’s no wonder people mess up. Experience helps a lot, but understanding it should speed it up quite a bit. To keep this brief, I’ll leave more applications for another post, but this should at least give you a basic enough understanding to draw up other scenarios or realize in what instances you’ve been using kb stacking without realizing it. One last thing, I promised excited Westballz in my last post, so here you go: aaa We’re gonna look into jumping in this series of articles, in particular the following jump-related topics: Jump direction and drift Instant double jumping and why you shouldn’t do it Backflips Having said that, let’s jump into the first article. 0.0.2 Jump Direction and drift Some of you might have watched this video or this one on analog jumps. They show one of the concepts I want to talk about here: intial jump speed is determined by your stick position on the 2nd to last frame of jump startup. This means you can control your jump distance without needing to drift, which simplifies inputs and lets you focus on other stuff, like which direction you’re gonna laser in, changing your fast fall timing or just freeing up your mental stack so you can pay attention to your opponent (please pay attention to your opponent). The following pic shows Falco’s landing position, with no drift whatsoever, if you dash and then hold the stick during jump startup in a certain direction. The arrow shows Falco’s starting position, he then dashes left or right, and does the exact same laser (no variation on jump, laser or fast fall timing). The only difference between each one is that I held left, right or no direction during jump startup, so the leftmost bird is doing dash left, then jumping left; the next one dash left, releasing the control stick during jump startup (neutral jump), and so on. The pic is missing dash right, jump left, which would go right in the blank space in front of the intitial location. This brings us to something really good that more people should do: dash forward neutral jump. What’s so good about it? It lets you advance and doesn’t expose you to attacks in place or dash back whiff punish attempts (and more!). This is a very basic example, Falco does laser into approaching laser, Sheik responds with take laser ftilt (you can replace this with a Fox/Marth uptilt or anything similar). Then he does laser into dash neutral jump laser, which puts him close to Sheik with frame advantage. Here’s an example with Fox doing dash dance grab vs an approaching dair: And here’s one against Samus, which needs a bit more explaining. This dair covers Samus moving forward (a wavedash forward goes right into it), is safe from her OoS options (upb and nair OoS won’t hit) and still gives you enough time to chase and whiff punish in case she does a wd back dsmash/dtilt to cover an overshoot. All of this applies if you jump while running, walking, standing still (or shield stopping). On that last one: Shield stops allow you to do standing jumps out of dash, since they drop your character velocity to 0. You can use shield stop jumps as a way to change the starting position of your “standing jump”, but I don’t recommend doing the dashback shield stop lasers that some players like to do, unless you have a good reason for it. You’re usually better off doing a short jump in that direction, it’s faster and easier to execute anyway if you apply what’s covered in this article. A neat way to use shield stop jumps is as easier pivot jumps, they’re a tiny bit slower but a lot more reliable, using the cstick correctly should let you avoid wasting frames: push the cstick up before pressing shield, so when you press shield you’ll get an instant jump (only 1 frame of shield). I’ll talk more about why Falco would want to do this in another article (hint: it’s about backflipping). With that out of the way, let’s close this with a little bit of info on drift. Drift applies acceleration to your character each frame, proportional to your control stick’s X position, but it can’t put you over your character’s max air speed. This last part is very relevant to Falco, as dashing then jumping forward puts you over his max air speed, which means drifting forward does absolutely nothing if you jumped forward. Plus, since you’re over your max air speed, the game will slow you down each frame, independent of drift, and we can take advantage of that to basically stop in midair really fast: if you drift back while past max air speed, it gets added to the natural speed reduction. This allows Falco to control his jumps even more precisely (at least jumps forward) as you can pick a spot and hit the brakes. I hope this helped you guys understand jumping mechanics better, let me know if something was unclear or wrong so I can fix it. Also dash neutral jump, it’s really good. Over the course of melee’s competitive lifespan there has been a lot of talk regarding l-canceling in terms of decision making and game design, some people think it’s unnecessary, others think it adds complexity to the game. With Project M being relevant again, the idea of removing it (making it automatic) has been floated around, with special attention being put on how the mechanic is different in each game. While they do function differently, there’s lots of misunderstandings about how it actually works in Melee. One thing I saw brought up multiple times was how in PM, l-canceling “buffered” through hitlag, something that doesn’t happen in Melee, so let’s get this straight: there is no l-cancel buffer in PM*, but there is one in Melee. This might sound weird, which is why I say people are misunderstanding the mechanic: in Melee, if you press a shield input during hitlag, the game will save said input until hitlag ends, ie, buffers it. Don’t believe me? Don’t worry, you wouldn’t be the first, so here’s a demonstration. Here I’m controlling both Falco’s with a single controller, and inputing an l-cancel during P1’s hitlag. For P2 nothing special happens, he lands 2 frames after the input, but P1 Falco lands 8 frames after the input, which would mean no l-cancel at all. Here’s an even more extreme example: Falcon’s strong knee has 9 frames of hitlag, which is more than the whole l-cancel window. Here I input the l-cancel on the first frame of hitlag, which would mean Falcon lands 8+the remaining airborne frames after the input, yet he still gets the l-cancel. Cool, huh? The biggest implication for this is that you can option select l-cancels for both hit and whiff with a single input, which simplifies the whole thing. There’s some situations where the timing might be a bit awkward, and against a moving target the timing can easily change, so how do you deal with that? Double tap any shield button and the problem goes away. Most of the difficulty around l-canceling comes from people not being aware of these 2 things, and reducing complexity will allow you to react faster, spend less mental energy, and well, not miss l-cancels. So from now on make it easy on yourselves and option select your l-cancels with a single (or multiple) input(s). You still have to care about it whiffing or connecting, but this gives you more time until you have to act on said information, so go out there and l-cancel smart, your brain will thank you. 0.0.2.0.1 *Note: If you’re curious, in PM attacker hitlag basically doesn’t exist, those frames don’t affect the l-cancel window and they don’t accept inputs either. If you do the l-cancels I’m talking about in this article in PM, you’ll miss them unless you press and hold the shield button, so the input gets read as soon as hitlag ends. On the flipside, you can just do the l-cancel before hitlag every time and you won’t miss them. This article is part 2 of the jump series: today I’m gonna cover why instant double jumps as Falco are basically riskier full hops and aren’t actually helping you. First thing I want to cover is speed, as instant double jumps (IDJ) are considered to be faster than full hops for some reason, probably related to the different animation, as Falco spinning might invoke a sense of speed, similar to how Mario and Doc are sometimes considered to have different speeds, but in reality they move exactly the same, Mario just spins more during his jumps. Instant double jumps are technically faster than full hops, but not meaningfully so, a frame perfect IDJ (double jump on the first airborne frame) into ff is only 4 frames faster than a full hop. Here’s 2 gfycats showing IDJ with short hop and full hop respectively, they are identical when done frame perfectly as you double jump before you get any noticeable height. Not much of a difference, right? If you do the double jump 1 frame late, you save 3 frames, 2 frames late and you save a single frame. Marginally faster. Let’s look at how it works with a full hop: In this case, if you’re late by a frame on the double jump, you save 2 frames total. Double jumping 2 frames late makes your total airtime identical to a full hop, and jumping anything later than that makes it slower than just full hopping. The IDJ isn’t really helping with anything here, and is actively hurting you by leaving you without a jump, which can lead to situations like this one: Westballz lost 2 stocks in no time because he IDJ’d and M2K swung at him. This happens more often than you’d think, albeit in less obvious ways (not 2 in a row, higher percent, etc.), so it flies under the radar. With that out of the way, let’s look at what an instant double jump can actually do for you. Double jumps ignore previous velocity, so you can be running one way and IDJ the other with no loss of speed, while a full hop would have your previous speed counteracting the backwards velocity you get from the jump. This can help with consistency, as you don’t have to worry about where you were going and at what speed, you just need to make sure you point the stick in the right direction before pressing jump (kinda like a shield stop). Height also matters, since a well-executed IDJ goes a bit lower than a full hop, you can avoid landing on top platform on Battlefield and Dreamland when doing so. And if you want to go barely higher than a full hop, doing a full hop into double jump a few frames later will get you there, but that’s on the more obvious side of things. IDJ also changes your ECB, which allows you to do perfect wavelands on Dreamland side platforms: normally the ECB updates just after you pass the platform, so doing the airdodge either misses the platform (early) or has you spend a frame in the airdodge animation (or more depending on the angle) before touching the platform. This isn’t an issue on other stages. I hope this article helps people understand IDJs better, and think of when it’s really a good idea to use them, instead of defaulting to them or doing because they're faster. In part 3 of the jump series I’ll go over backwards short hop applications aka the backflip. Dealing with lasers isn’t easy, neither is using the correctly, in the Falco ditto you have to do both, often at the same time. It’s not rare for Falco players to dislike or be inconsistent in it, and in my opinion it has to do with how limited Falco’s basic options are when dealing with lasers, his dash is slow, isn’t very good at low profiling and his full hop goes very high. This leads to people feeling trapped by lasers and disengaging by going to platforms or jumping around, hoping the opposing Falco will miss the timing to catch them. For a player with the better punish game, this might not seem like a problem, they just need to get lucky or get a single opening to take a stock, but it’s not a very sustainable strategy, which leads to top Falco players trading sets all over the place. In this context, I’ll try and break down the most important concepts for lasers, with height as the starting point. Because there’s a million heights, I’ll talk about 3 of them that I find especially important: Beak Low High Beak lasers are called that because they’re shot at the height of Falco’s beak when idle, this lasers are very useful vs Fox and Falco because it’s not possible to dash/run under them, nor short hop over them (outside of a big exception I’ll go over later). From the offensive side that sounds pretty good, but that doesn’t mean there’s nothing you can do about them, crouch or a wavedash will go under them. They also allow you to beat people using shine to reflect lasers: https://gfycat.com/anguisheddefenselessfirebelliedtoad Since this height covers a lot of options, you can treat is as your go-to vs spacies, but be aware they can counter it by going under, this is especially important in the ditto when both Falco’s are shooting: https://gfycat.com/weakaltruisticirrawaddydolphin In this example, both Falco’s shoot the first laser at the exact same time, blue Falco then instantly goes for another laser, while neutral Falco waits in his landing animation (you can crouch too, and it’s better cause you also cover a low laser hitting you with cc). This leads to blue Falco jumping into a laser, while neutral Falco dodges. Afterwards neutral Falco just shoots a bit lower asap, which stops blue Falco from getting his own laser out (he’s acting frame perfectly) or going under. This forces the Falco who lost the interaction to shield or move, trying to shoot back isn’t gonna get him anything. Low lasers give the most frame advantage and are harder to powershield in lots of situations, especially against characters who crouch/dash powershield (Marth being the most common due to his bugged shield). When the opponent actually powershields a low laser you get to easily go over it, but that means the opponent could have jumped over it instead, which can lead to losing laser control in the ditto. High lasers are good when the opponent is on a platform or coming down on you. In certain matchups, like Falcon and Samus, they’re very important in neutral. Vs Falcon high lasers will help you keep him grounded (keep in mind side B goes through most lasers, only low lasers will usually work against it because they hit his hand). Against Samus, you want to shoot low lasers if she’s grounded (her shield is bugged just like Marth’s) but once she’s on a platform, if you do high laser into high approaching laser she cannot get down without getting hit, there’s not enough time no matter what she does. This means no missiles or aerials while you get under her. This concept, laser in place into approaching laser, is very important in the ditto too, because the opposing Falco won’t be able to laser you back. This brings us to a very important concept, if you shoot consecutive lasers in place, frame advantage is not affected by distance unless someone moves: whatever extra frame advantage you get from the laser travel time is eaten up by the next laser’s travel time, it takes longer to reach the opponent so they even out. You can look at it like this, frame advantage for a laser is gonna be the (laser’s stun) - (4 frames of Falco’s landing animation) + (travel time) but then the total startup for the next laser is (kneebend) + (airborne frames before pressing B) + (12 frames of laser startup) + (travel time) If no one moves travel time is the same for both equations and it cancels out, so whenever you lab something involving more than 1 laser in place, remember that distance is irrelevant. Setchi recently posted about this on twitter if you’re interested in how it looks in-game. https://twitter.com/SetchiSSBM/status/1303033193034113025 https://twitter.com/SetchiSSBM/status/1303734298030346241 The final topic I wanted to cover was TRT lasers (don’t really have a name for them but TRT from Ohio uses them a lot), the idea is you don’t challenge a laser by going over or under, instead you laser through them. This works because the startup of laser has Falco opening up his legs, so lasers can go right in between, then he bends his knees, so he keeps dodging. As far as lasers are concerned, his legs don’t exist except on the frame where they cross each other. Another way to use this is with a sh back (backflip), but if you just backflip you’ll fall into the laser unless you match the precise timing of the incoming projectile. The solution is to laser as Falco’s legs start to come down, you’ll dodge the opponent’s shot using the hurtbox distortion as with a TRT laser. This lets you do other laser timings and heights while still dodging. Credit goes to Flash for labbing this concept. That covers most of the laser vs laser stuff, but a lot of the time, especially at closer ranges, you don’t have time to retake laser control. Some of the classic options are take laser uptilt and full hop, but there’s a few other options that should be part of every Falco’s repertoire. These are: wavedash in shine to call out a laser: wd to their landing spot or get under them as they jump, requires a read on their movement but the reward is huge. take laser zhu dair: the Falco equivalent of the Lord stomp, you dash away then dair, avoiding an immediate attack and whiff punishing it at the same time. dash away and powershield: you get tiny bit of extra leniency to powershield, because you get Falco’s head out of the powershield bubble. dash away and try to backflip laser or bair. This last option can easily end up badly if you get shot out of the air, the opponent could aerial afterwards and get a combo, but you can buffer a double jump out of hitstun by pressing a jump button or tap jumping. This is one of the few true buffers in melee, and last for 20 frames. That covers all of the laser hitstun, which makes it a 9 frame window (basically works as long as you don’t input the jump during hitlag). This is useful whenever you get shot out of the air https://www.youtube.com/watch?v=pv5mgs7yrPw&amp;start=659 https://www.youtube.com/watch?v=tNj6L7fe2L0 "]
]
